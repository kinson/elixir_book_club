# Concurrent Data Processing Notes

## Chapter 1

```elixir
defmodule Sender do
  def emails() do
    ["emailone@gmail.com", "email2@gmail.com", "email3@gmail.com"]
  end

  def send_email(email) do
    Process.sleep(3000)
    IO.puts("Email to #{email} sent")
    {:ok, "email_sent"}
  end

  def notify_all() do
    Enum.each(emails(), &send_email/1)
  end
end
```

```elixir
Sender.send_email("henry@dog.com")
```

```elixir
Sender.notify_all()
```

* Running them all sequentially is slow!
